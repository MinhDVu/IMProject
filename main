//lists of objects
ArrayList<collisionParticles> collision = new ArrayList<collisionParticles>();
ArrayList<interactiveCollisionParticles> interactiveCollisions = new ArrayList<interactiveCollisionParticles>();
//constants
float g = 0.015;
float dt = 0;
//screens
boolean homescreen = true;
boolean collisions = false;
boolean interactiveCollision = false;
void setup(){
size(1200,1200);
 reset();
}
void reset() {
background(0);

for (int i = 0; i < 30; i ++) {
 interactiveCollisions.add(new interactiveCollisionParticles(random(0, width), random(0, height),
random(-5,5), random(-5,5), random(10,80), random(0,255), random(0,255), random(0,255))); 
 }
}
void draw(){
 drawAndUpdate();
}
void mousePressed(){
float xDist = 160;
float yDist = 40;
if (homescreen == true) {

 if (abs(mouseX - 520) <= xDist && abs(mouseY - 630) <= yDist) {
 homescreen = false;
 interactiveCollision = true;
 }
 }
 //non home screen
if (homescreen == false) {
 xDist = 60;
 yDist = 20;
 if (abs(mouseX - 120) <= xDist && abs(mouseY - 40) <= yDist){

 interactiveCollision = false;
 homescreen = true;
 }
 } 
}
void drawAndUpdate(){
// homescreen
if (homescreen == true) {
 background(255);


 fill(#5D92DB);
 rect(348, 300, 500, 120, 40);
 fill(0);
 textSize(63);
 text("Assignment 4", 390, 380);

 // sub rects
 float xDist = 160;
 float yDist = 40;
 // interactive collision button
 if (abs(mouseX - 520) <= xDist && abs(mouseY - 630) <= yDist) {
 fill(#48B788);
 rect(440, 570, 320, 80, 40);
 fill(255);
 textSize(56);
 text("Start", 470, 630);
 }
 else {
 fill(#95EAC0);
 rect(440, 570, 320, 80, 40);
 fill(255);
 textSize(56);
 text("Collisions", 470, 630); 
 }
 }

// update
if (homescreen == false){
 backButton();
 if (collisions == true) {
 collide();
 for (int i = 0; i < collision.size(); i++){
 collision.get(i).update();
 collision.get(i).display();
 }
 }
if (interactiveCollision == true) {
 collide();
 for (int i = 0; i < interactiveCollisions.size(); i ++) {
 interactiveCollisions.get(i).update();
 interactiveCollisions.get(i).display();
 }
 }
}
}
void backButton(){
 float xDist = 60;
 float yDist = 20;
 if (abs(mouseX - 120) <= xDist && abs(mouseY - 40) <= yDist){
 background(0);
 fill(100); 
 rect(75,20,120,40,10);
 fill(200);
 textSize(38);
 text("back", 95, 52);
 } else {
 background(0);
 fill(50);
 rect(75,20,120,40,10);
 fill(100);
 textSize(38);
 text("back", 95, 52);
 }
}

// speed changes of the partical of the colliding with other object
void collide(){
if (collisions == true) {
if (collision.size() > 1) {
for (int i = 0; i < collision.size() - 1; i ++) {
 for (int j = i + 1; j < collision.size(); j ++) {
 float dx = collision.get(i).x - collision.get(j).x;
 float dy = collision.get(i).y - collision.get(j).y;
 float distance = abs(sqrt(dx*dx + dy*dy));
 float bump = collision.get(i).size/2 + collision.get(j).size/2;
 if (distance <= bump) {
 float theta = atan2(dy, dx);
 float endX = collision.get(i).x + cos(theta)*bump;
 float endY = collision.get(i).y + sin(theta)*bump;
 collision.get(i).vx = (endX - collision.get(j).x)/(collision.get(i).size);
 collision.get(i).vy = (endY - collision.get(j).y)/(collision.get(i).size);
 collision.get(j).vx = (collision.get(j).x - endX)/(collision.get(j).size);
 collision.get(j).vy = (collision.get(j).y - endY)/(collision.get(j).size);
 }
 }

 }
 }
 }
if (interactiveCollision == true) {
if (interactiveCollisions.size() > 1) {
for (int i = 0; i < interactiveCollisions.size() - 1; i ++) {
 for (int j = i + 1; j < interactiveCollisions.size(); j ++) { 
 float dx = interactiveCollisions.get(i).x - interactiveCollisions.get(j).x;
 float dy = interactiveCollisions.get(i).y - interactiveCollisions.get(j).y;
 float distance = abs(sqrt(dx*dx + dy*dy));
 float bump = interactiveCollisions.get(i).size/2 + interactiveCollisions.get(j).size/2;
 if (distance <= bump) {
 float theta = atan2(dy, dx);
 float endX = interactiveCollisions.get(i).x + cos(theta)*bump;
 float endY = interactiveCollisions.get(i).y + sin(theta)*bump;
 interactiveCollisions.get(i).vx = (endX - interactiveCollisions.get(j).x)/(interactiveCollisions.get(i).size);
 interactiveCollisions.get(i).vy = (endY - interactiveCollisions.get(j).y)/(interactiveCollisions.get(i).size);
 interactiveCollisions.get(j).vx = (interactiveCollisions.get(j).x - endX)/(interactiveCollisions.get(j).size);
 interactiveCollisions.get(j).vy = (interactiveCollisions.get(j).y - endY)/(interactiveCollisions.get(j).size);
 }
 }

 }
 }
 }
}

// collision of the particles
class collisionParticles{
float x;
float y;
float vx;
float vy;
float size;
float r;
float g;
float b;

 collisionParticles(float ix, float iy, float ivx, float ivy, float isize, float ir, float ig, float ib) {
 x = ix;
 y = iy;
 vx = ivx;
 vy = ivy;
 size = isize;
 r = ir;
 g = ig;
 b = ib; 
 }

void update() {
 if (vx > 0){
 if (x >= width-1) {
 if (vx > 0){
 vx = -vx;
 }
 }
 if (x <=0) {
 if (vx < 0) {
 vx = vx;
 }
 }
 }
 else {
 if (x >= width- 1) {
 if (vx > 0){
 vx = vx;
 }
 }
 if (x <=0) {
 if (vx < 0){
 vx = -vx;
 }
 }
 }
 if (vy > 0) {
 if (y >= height -1) {
 if (vy > 0) {
 vy = -vy;
 y = height - 1;
 }
 }
 if (y <=0) {
 if (vy < 0){
 vy = vy;
 }
 }
 }
 else { 
 if (y >= height -1) {
 if (vy > 0) {
 vy = vy;
 y = height - 1;
 }
 }
 }
 if (y <=0) {
 if (vy < 0) {
 vy = -vy;
 }
 }
 x += vx;
 y += vy;
 }


void display() {
 stroke(r, g, b);
 fill(r, g, b);
 ellipse(x,y,size,size);
 }


}

//number of circle on the screen
class interactiveCollisionParticles{
float x;
float y;
float vx;
float vy;
float size;
float r;
float g;
float b;

 interactiveCollisionParticles(float ix, float iy, float ivx, float ivy, float isize, float ir, float ig, float ib) {
 x = ix; 
 y = iy;
 vx = ivx;
 vy = ivy;
 size = isize;
 r = ir;
 g = ig;
 b = ib;
 }
 
//update position of the partical after making contact with the mouse 
void update() {
 float dist = size;
 if (dist >= abs(x - mouseX) && dist >= abs(y - mouseY)) {
 float dx = x - mouseX;
 float dy = y - mouseY;
 float theta = atan2(dy, dx);
 float endX = x + cos(theta)*size;
 float endY = y + sin(theta)*size;
 vx = (endX - mouseX)/(size);
 vy = (endY - mouseY)/(size);
 }
 if (vx > 0){
 if (x >= width-1) {
 if (vx > 0){
 vx = -vx;
 }
 }
 if (x <=0) {
 if (vx < 0) {
 vx = vx;
 }
 }
 }
 else {
 if (x >= width- 1) {
 if (vx > 0){
 vx = vx;
 }
 }
 if (x <=0) {
 if (vx < 0){
 vx = -vx; 
 }
 }
 }
 if (vy > 0) {
 if (y >= height -1) {
 if (vy > 0) {
 vy = -vy;
 y = height - 1;
 }
 }
 if (y <=0) {
 if (vy < 0){
 vy = vy;
 }
 }
 }
 else {
 if (y >= height -1) {
 if (vy > 0) {
 vy = vy;
 y = height - 1;
 }
 }
 }
 if (y <=0) {
 if (vy < 0) {
 vy = -vy;
 }
 }
 x += vx;
 y += vy;
 }


void display() {
 stroke(r, g, b);
 fill(r, g, b);
 ellipse(x,y,size,size);
 }
}
